{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-01-26T15:08:57.540520Z",
     "start_time": "2022-01-26T15:08:57.529542Z"
    }
   },
   "outputs": [],
   "source": [
    "import numpy as np \n",
    "import pandas as pd \n",
    "\n",
    "from sklearn.pipeline import make_pipeline\n",
    "\n",
    "from sklearn.preprocessing import PolynomialFeatures \n",
    "from sklearn.linear_model import LogisticRegression\n",
    "from sklearn.linear_model import LinearRegression, Ridge\n",
    "\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.metrics import mean_squared_error as mse\n",
    "\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "%matplotlib inline"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Interactive outputs of notebook"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "There are many applications in which you can run your Python code, such as IDE and Notebooks, We choose  notebooks for some reasons，\n",
    "\n",
    "- Notebook combined with Python provides a quite efficient toolkit for prototyping.\n",
    "\n",
    "- Notebook can provide fully interactive outputs, you can write/change the code and observe (print) the effects immediately, without running the entire \"program\".\n",
    "\n",
    "That means:\n",
    "\n",
    "- After you execute a statement, e.g., defining a variable and giving it a value, you can (and perhaps should) immediately just check the value by printing it.\n",
    "\n",
    "- Write some code (or change some code), you can observe the results immediately (fix/modify as you go).\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-01-26T15:08:58.340105Z",
     "start_time": "2022-01-26T15:08:58.315207Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([1, 2, 3, 5])"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "A = 3\n",
    "# print(A)\n",
    "\n",
    "B = 0.1\n",
    "# print(B)\n",
    "\n",
    "C = [1,2,3,5]\n",
    "# print(C)\n",
    "\n",
    "D = np.array([1,2,3,5])\n",
    "# print(D)\n",
    "\n",
    "A\n",
    "D"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-01-26T15:08:59.233491Z",
     "start_time": "2022-01-26T15:08:59.224279Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[1, 2, 3, 5]\n",
      "[1 2 3 5]\n"
     ]
    }
   ],
   "source": [
    "# print()  vs type()\n",
    "print(C)\n",
    "print(D)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-01-26T15:08:59.249304Z",
     "start_time": "2022-01-26T15:08:59.239659Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "list"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "type(C)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-01-26T15:08:59.261227Z",
     "start_time": "2022-01-26T15:08:59.253922Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "numpy.ndarray"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "type(D)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-01-26T15:08:59.471281Z",
     "start_time": "2022-01-26T15:08:59.447742Z"
    }
   },
   "outputs": [],
   "source": [
    "def sum_num(X):\n",
    "    s = np.sum(X)\n",
    "    return s"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-01-26T15:08:59.626245Z",
     "start_time": "2022-01-26T15:08:59.609415Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[1, 2, 3, 5]\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "11"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "print(C)\n",
    "sum_num(C)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-01-26T15:08:59.824896Z",
     "start_time": "2022-01-26T15:08:59.817173Z"
    }
   },
   "outputs": [],
   "source": [
    "# misusing of print() and return\n",
    "\n",
    "def func1(X):\n",
    "    m = np.mean(X)\n",
    "    return m\n",
    "\n",
    "def func2(X):\n",
    "    m = np.mean(X)\n",
    "    print(m)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-01-26T15:08:59.972948Z",
     "start_time": "2022-01-26T15:08:59.955181Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "3.0"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "func1(A)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-01-26T15:09:00.159474Z",
     "start_time": "2022-01-26T15:09:00.145359Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "3.0\n"
     ]
    }
   ],
   "source": [
    "func2(A)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-01-26T15:09:04.079833Z",
     "start_time": "2022-01-26T15:09:04.073775Z"
    },
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "3.0\n"
     ]
    }
   ],
   "source": [
    "output1 = func1(A)\n",
    "output2 = func2(A)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-01-26T15:09:04.090630Z",
     "start_time": "2022-01-26T15:09:04.084359Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "output1 is:  3.0\n",
      "output2 is:  None\n"
     ]
    }
   ],
   "source": [
    "print(\"output1 is: \",output1)\n",
    "print(\"output2 is: \",output2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-01-26T15:09:05.350178Z",
     "start_time": "2022-01-26T15:09:05.331530Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "numpy.float64"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "type(output1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-01-26T15:09:05.380510Z",
     "start_time": "2022-01-26T15:09:05.360329Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "NoneType"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "type(output2)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# ML diagnosis：underfitting and overfitting\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Learning goals\n",
    "- Train a model on the training set, and then compute train/validation  error/accuracy to detect underfitting/overfitting\n",
    "- Use k-fold CV as a more advanced version of single train/val \n",
    "- Select between different models based on validation error/accuracy\n",
    "\n",
    "- Understand how model size influence the performance of a model\n",
    "- Understand how regularization strength influence the performance of a model"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Underfitting and overfitting of regression task\n",
    "**Using simulated dataset to illustrate how model size（polynomial degree）and regularization strength affect model's performance on training set and validation set：model being underfitted, overfitted or properly fitted:**\n",
    "\n",
    "- The left plot shows a properly fitted model.\n",
    "\n",
    "- The right plot is for you to play around, you can try out different values for poly degree, alpha to see the effect."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-01-26T15:09:06.225591Z",
     "start_time": "2022-01-26T15:09:06.161888Z"
    }
   },
   "outputs": [],
   "source": [
    "def make_data(N=30, err=0.8, seed=1):\n",
    "    \n",
    "    \"\"\"Use a complicated function to simulate real-life dataset：intrinsic relation + noise\"\"\" \n",
    "    \n",
    "    rng = np.random.RandomState(seed)\n",
    "    X = rng.rand(N, 1) ** 2\n",
    "    y = 10 - 1. / (X.ravel() + 0.1) # intrinsic relation between X and y\n",
    "    y += err * rng.randn(N)  # noise \n",
    "    return X, y\n",
    "\n",
    "# err is std of noise, that means err**2 is the variance of y given x, i.e. Bayes error\n",
    "\n",
    "def PolynomialRegression(degree=1, regularization=True, alpha=None):\n",
    "    \n",
    "    \"concatenate polynomial feature transformer and linear models to facilitate hyperparamter tuning\"\n",
    "    \n",
    "    if regularization==True:\n",
    "        return make_pipeline(PolynomialFeatures(degree),\n",
    "                         Ridge(alpha=alpha,fit_intercept=False))\n",
    "    else:\n",
    "        return make_pipeline(PolynomialFeatures(degree),\n",
    "                         LinearRegression(fit_intercept=False))\n",
    "    \n",
    "def plot_underfit_overfit():\n",
    "    fig, ax = plt.subplots(1, 2, figsize=(14, 5))\n",
    "    fig.subplots_adjust(left=0.0625, right=0.95, wspace=0.1)\n",
    "    \n",
    "    xfit = np.linspace(-0.1, 1.0, 1000)[:, None]\n",
    "    ax[0].scatter(X.ravel(), y, s=40, c='blue',label='training set')\n",
    "    ax[0].plot(xfit.ravel(), model1.predict(xfit), color='gray',label='h(x)')\n",
    "    ax[0].axis([-0.1, 1.0, -2, 14])\n",
    "    ax[0].set_title('MSE on training set: {:.5}\\n MSE on val set: {:.5}'.format(train_mse1,val_mse1),fontsize=14)\n",
    "    ax[0].scatter(X_val.ravel(), y_val, s=40, c='red',label='validation set')\n",
    "    ax[0].set_xlabel('X  (Feature)')\n",
    "    ax[0].set_ylabel('y  (label)')\n",
    "    ax[0].legend(loc=\"lower right\")\n",
    "\n",
    "    ax[1].scatter(X.ravel(), y, s=40, c='blue',label='training set')\n",
    "    ax[1].plot(xfit.ravel(), model2.predict(xfit), color='gray',label='h(x)')\n",
    "    ax[1].axis([-0.1, 1.0, -2, 14])\n",
    "    ax[1].set_title('MSE on training set: {:.5}\\n MSE on val set: {:.5}'.format(train_mse2,val_mse2),fontsize=14)\n",
    "    ax[1].scatter(X_val.ravel(), y_val, s=40, c='red',label='validation set')\n",
    "    ax[1].set_xlabel('X (Feature)')\n",
    "    ax[1].legend(loc=\"lower right\")\n",
    "    plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-01-26T15:16:59.951677Z",
     "start_time": "2022-01-26T15:16:59.095669Z"
    },
    "scrolled": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Bayes Error: 0.6400000000000001\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1008x360 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "## Try different hyperparameters to tune model complexity and regularization strength \n",
    "## and illustrate underfitting/overfitting\n",
    "\n",
    "DEGREE = 15   # Polynomial degree to control the size of the model\n",
    "R = True     # Regularize or not, If True, use Ridge model(L_2 regularizetion), if False, use plain linear regression model\n",
    "ALPHA = 0.001   # Manipulate the regularization strength of Ridge, larger values specify stronger regularization\n",
    "\n",
    "N = 45\n",
    "ERR = 0.8 # std of noise, ERR**2 is variance of y given x, i.e. Bayes error / irreducible error\n",
    "X, y = make_data(N=N, err=ERR, seed=8)\n",
    "\n",
    "X_train, X_val, y_train, y_val = train_test_split(X, y, test_size=0.4, random_state=0) # training, val set split\n",
    "\n",
    "model1 = PolynomialRegression(degree = 3,regularization=False,alpha=None).fit(X_train, y_train) #train a linear regression model\n",
    "model2 = PolynomialRegression(degree = DEGREE,regularization=R,alpha=ALPHA).fit(X_train, y_train) #train a Ridge model\n",
    "\n",
    "y1 = model1.predict(X_train); train_mse1 = mse(y1,y_train); y2 = model2.predict(X_train); train_mse2 = mse(y2,y_train)\n",
    "y1_val = model1.predict(X_val); val_mse1 = mse(y1_val,y_val); y2_val = model2.predict(X_val); val_mse2 = mse(y2_val,y_val)\n",
    "\n",
    "print(\"Bayes Error:\",ERR**2)  # Bayes error / noise / irreducible error\n",
    "# Bayes error is the lowest possible prediction error that can be achieved and is the same as irreducible error \n",
    "plot_underfit_overfit()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**The figure below** shows\n",
    "training MSE decreases monotonically as the polynomial degree increases, while validation MSE initially decreases but eventually starts to increase again.\n",
    "\n",
    "[sklearn.model_selection.cross_validate](https://scikit-learn.org/stable/modules/generated/sklearn.model_selection.cross_validate.html) is used here to do k-fold cross validation to make the code concise, it is efficient, but wraps all details. If you don't understand this block of code, no worries, in assignment4, you will see a detailed demo of k-fold cross validation."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-01-26T15:24:03.991281Z",
     "start_time": "2022-01-26T15:24:03.315953Z"
    },
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x504 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "from sklearn.model_selection import cross_validate\n",
    "\n",
    "# cross_validate() expects a scorer object for the parameter scoring. All scorer objects follow the convention \n",
    "# that higher return values are better than lower return values, so \"neg_mean_squared_error\" is returned here\n",
    "# see https://scikit-learn.org/stable/modules/model_evaluation.html for more details\n",
    "ERR = 0.8\n",
    "X, y = make_data(45,err=ERR,seed=8)  # generate dataset\n",
    "def plot_errors_reg():\n",
    "    fig, axs = plt.subplots(figsize=(10,7))\n",
    "    train_errs = []\n",
    "    val_errs = []\n",
    "    degrees = range(1,15)\n",
    "    for degree in degrees :\n",
    "        # Sklearn use \"estimator\" to refer to regressor/classifier\n",
    "        estimator = PolynomialRegression(degree = degree,regularization=False,alpha=None) # initialize a regressor\n",
    "        \n",
    "        # cross_validate() returns a dictionary of arrays containing the training scores, validation scores, etc.\n",
    "        cv_results = cross_validate(estimator, X, y, cv=5,scoring=\"neg_mean_squared_error\",return_train_score=True)\n",
    "        \n",
    "        average_train_error = (-cv_results['train_score']).mean() # calculate averaged train error of k folds\n",
    "        average_val_error = (-cv_results['test_score']).mean() # calculate averaged validation error of k folds\n",
    "        \n",
    "        train_errs.append(average_train_error) # stack training errors into a list\n",
    "        val_errs.append(average_val_error)# stack validation errors into a list\n",
    "        \n",
    "    axs.plot(degrees,train_errs,color='red',label='training error')\n",
    "    axs.plot(degrees,val_errs,color='blue',label='validation error')\n",
    "    axs.axhline(y=ERR**2,linewidth=2, color='g',ls=\"--\",label=\"Bayes error\")\n",
    "    axs.set_xlabel('Degree of polynomial (model size)')\n",
    "    axs.set_ylabel('Mean Squared Error (MSE)')\n",
    "    axs.legend()\n",
    "    \n",
    "plot_errors_reg()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## You try it\n",
    "Try to plot a figure showing how regularization strength (alpha) influences the performance of a model, i.e. how training error and validation error evolves.\n",
    "\n",
    "Use a larger polynomial degree, say 10, and then change alpha in $[10^{-4},10^{-3},10^{-2},10^{-1},1,10,10^{2}]$"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Automatically search for best hyperparameters (polynomial degree and alpha)\n",
    "GridSearchCV provides efficient method to search for best hyperparameters."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-01-26T15:27:39.282443Z",
     "start_time": "2022-01-26T15:27:39.278704Z"
    }
   },
   "outputs": [],
   "source": [
    "from sklearn.model_selection import GridSearchCV"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-01-26T15:29:12.039307Z",
     "start_time": "2022-01-26T15:29:11.687553Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The lowest MSE we can get on validation set is:  0.8077153847079636\n",
      "It's corresponding polynomial degree is:  {'polynomialfeatures__degree': 3}\n"
     ]
    }
   ],
   "source": [
    "parameters = {'polynomialfeatures__degree':range(1,15)} # parameter range we want to search\n",
    "\n",
    "# Sklearn use \"estimator\" to refer to regressor/classifier\n",
    "estimator = PolynomialRegression(regularization=False) # initialize a regressor\n",
    "\n",
    "# Similarly,GridSearchCV() also expects a scorer object for the parameter scoring\n",
    "regr = GridSearchCV(estimator=estimator,scoring = \"neg_mean_squared_error\",param_grid=parameters,cv=5)\n",
    "regr.fit(X,y)\n",
    "\n",
    "print(\"The lowest MSE we can get on validation set is: \",-regr.best_score_)\n",
    "print(\"It's corresponding polynomial degree is: \", regr.best_params_)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-01-26T15:29:16.076530Z",
     "start_time": "2022-01-26T15:29:13.336187Z"
    },
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The lowest MSE we can get on validation set is:  0.8039945063359261\n",
      "It's corresponding polynomial degree is:  {'polynomialfeatures__degree': 4, 'ridge__alpha': 0.0001}\n"
     ]
    }
   ],
   "source": [
    "parameters = {'polynomialfeatures__degree':range(1,15),'ridge__alpha': np.logspace(-5,5,11)}\n",
    "estimator = PolynomialRegression(regularization=True)\n",
    "\n",
    "regr = GridSearchCV(estimator=estimator,scoring = \"neg_mean_squared_error\",param_grid=parameters,cv=5)\n",
    "regr.fit(X,y)\n",
    "\n",
    "print(\"The lowest MSE we can get on validation set is: \",-regr.best_score_)\n",
    "print(\"It's corresponding polynomial degree is: \", regr.best_params_)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Underfitting and overfitting of classification task\n",
    "**Using a dataset from Kaggle to illustrate how model size（polynomial degree）and regularization strength affect model's performance on training set and validation set：model being underfitted, overfitted or properly fitted**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-01-26T15:30:47.502840Z",
     "start_time": "2022-01-26T15:30:46.989010Z"
    },
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.legend.Legend at 0x7ff0affc2cd0>"
      ]
     },
     "execution_count": 50,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Load Dataset for Logistic Regression\n",
    "data = pd.read_csv('ex2data2.txt', header=None, names = ['feature 1', 'feature 2', 'faulty'])\n",
    "data = data.sample(80,random_state=2) #randomly select 80 samples\n",
    "\n",
    "pos = data['faulty'] == 1 \n",
    "neg = data['faulty'] == 0\n",
    "\n",
    "# Visualize the dataset\n",
    "fig, axes = plt.subplots();\n",
    "axes.set_xlabel('Feature 1')\n",
    "axes.set_ylabel('Feature 2')\n",
    "axes.scatter(data.loc[pos, 'feature 1'], data.loc[pos, 'feature 2'], color = 'r', marker='x', label='Faulty')\n",
    "axes.scatter(data.loc[neg, 'feature 1'], data.loc[neg, 'feature 2'], color = 'g', marker='o', label='Good')\n",
    "axes.legend(title='Legend', loc = 'best' )"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-01-26T15:36:32.549687Z",
     "start_time": "2022-01-26T15:36:32.538109Z"
    }
   },
   "outputs": [],
   "source": [
    "## construct training and test set\n",
    "X = data.iloc[:, :2].to_numpy() # construct feature matrix, X.shape==(80,2), y.shape==(80,)\n",
    "y = data.iloc[:,-1].to_numpy() # construct label vector\n",
    "\n",
    "X_train, X_val, y_train, y_val = train_test_split(X, y, test_size=0.4, random_state=42) # training, val set split\n",
    "\n",
    "tr_p_idx = np.where(y_train == 1)[0] # indices of faulty samples in training set\n",
    "tr_n_idx = np.where(y_train == 0)[0] # indices of good samples in training set\n",
    "te_p_idx = np.where(y_val == 1)[0] # indices of faulty samples in val set\n",
    "te_n_idx = np.where(y_val == 0)[0] # indices of good samples in val set"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-01-26T15:36:34.651662Z",
     "start_time": "2022-01-26T15:36:34.596964Z"
    }
   },
   "outputs": [],
   "source": [
    "def polt_logistic_boundary(clf):\n",
    "    \n",
    "    def Boundary(theta, axes):\n",
    "\n",
    "        \"\"\"Plot the decision boundary\"\"\"\n",
    "\n",
    "        u = np.linspace(-0.75, 1, 50)\n",
    "        v = np.linspace(-0.75, 1, 50)\n",
    "        U,V = np.meshgrid(u,v)\n",
    "        # convert U, V to vectors for calculating additional features\n",
    "        # using vectorized implementation\n",
    "        U = np.ravel(U)\n",
    "        V = np.ravel(V)\n",
    "        Z = np.zeros((len(u) * len(v)))\n",
    "\n",
    "        F = np.array([U,V]).T # concatenate U, V to create feature matrix\n",
    "        F_p = poly.fit_transform(F) \n",
    "        Z = F_p.dot(theta.T) # Z(F_p) \n",
    "\n",
    "        # reshape U, V, Z back to matrix\n",
    "        U = U.reshape((len(u), len(v)))\n",
    "        V = V.reshape((len(u), len(v)))\n",
    "        Z = Z.reshape((len(u), len(v)))\n",
    "\n",
    "        cs = axes.contour(U,V,Z,levels=[0],cmap= \"Greys_r\")\n",
    "        axes.legend(labels=['good', 'faulty', 'Decision Boundary'])\n",
    "        return cs\n",
    "    \n",
    "    fig, axes = plt.subplots(1,2)\n",
    "    fig.set_size_inches(15, 5)\n",
    "    axes[0].set_xlabel('Feature 1')\n",
    "    axes[0].set_ylabel('Feature 2')\n",
    "    axes[0].scatter(X_train[tr_p_idx,0], X_train[tr_p_idx, 1], color = 'r', marker='x', label='Faulty')\n",
    "    axes[0].scatter(X_train[tr_n_idx,0], X_train[tr_n_idx, 1], color = 'g', marker='o', label='Good')\n",
    "    axes[0].legend(title='Legend', loc = 'best' )\n",
    "    axes[0].set_title('accuracy on training set: {}'.format(clf.score(X_poly,y_train)),fontsize=14)\n",
    "    Boundary(clf.coef_, axes[0])\n",
    "\n",
    "    axes[1].set_xlabel('Feature 1')\n",
    "    axes[1].set_ylabel('Feature 2')\n",
    "    axes[1].scatter(X_val[te_p_idx,0], X_val[te_p_idx, 1], color = 'orange', marker='x', label='Faulty')\n",
    "    axes[1].scatter(X_val[te_n_idx,0], X_val[te_n_idx, 1], color = 'b', marker='o', label='Good')\n",
    "    axes[1].legend(title='Legend', loc = 'best' )\n",
    "    axes[1].set_title('accuracy on validation set: {}'.format(clf.score(poly.transform(X_val),y_val)),fontsize=14)\n",
    "    Boundary(clf.coef_, axes[1])\n",
    "    \n",
    "    plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 65,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-01-26T15:39:31.603620Z",
     "start_time": "2022-01-26T15:39:31.085921Z"
    },
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1080x360 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "## Try different hyperparameters to tune model complexity and regularization strength \n",
    "## and illustrate underfitting/overfitting\n",
    "\n",
    "# C is the inverse of regularization strength, smaller values specify stronger regularization\n",
    "\n",
    "DEGREE = 12\n",
    "C = 100\n",
    "\n",
    "poly = PolynomialFeatures(degree=DEGREE)  \n",
    "X_poly = poly.fit_transform(X_train)\n",
    "\n",
    "clf = LogisticRegression(fit_intercept=False,C=C,max_iter=1000)\n",
    "clf = clf.fit(X_poly,y_train)\n",
    "\n",
    "polt_logistic_boundary(clf)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**The figure below** shows\n",
    "training accuracy increases monotonically as the regularization penalty gets weak, while validation accuracy initially iecreases but eventually starts to decrease."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 66,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-01-26T15:39:50.380648Z",
     "start_time": "2022-01-26T15:39:48.885395Z"
    },
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x504 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "poly = PolynomialFeatures(degree=10) \n",
    "X_poly = poly.fit_transform(X)\n",
    "\n",
    "def plot_accus_clf():\n",
    "    fig, axs = plt.subplots(figsize=(10,7))\n",
    "    \n",
    "    train_errs = []\n",
    "    val_errs = []\n",
    "    \n",
    "    Cs = np.logspace(-3, 3, num=6) # the range for C\n",
    "    \n",
    "    for C in Cs :\n",
    "        estimator = LogisticRegression(fit_intercept=False,C=C,max_iter=1000)\n",
    "        \n",
    "        # for classification task, we use \"accuraccy\" as scoring metric\n",
    "        cv_results = cross_validate(estimator, X_poly, y,cv=3,scoring=\"accuracy\",return_train_score=True)\n",
    "        \n",
    "        averaged_train_error = (cv_results['train_score']).mean()\n",
    "        averaged_val_error = (cv_results['test_score']).mean()\n",
    "        \n",
    "        train_errs.append(averaged_train_error)\n",
    "        val_errs.append(averaged_val_error)\n",
    "        \n",
    "    axs.plot(Cs,train_errs,color='red',label='training accuracy')\n",
    "    axs.plot(Cs,val_errs,color='blue',label='validation accuracy')\n",
    "    axs.set_xlabel('Inverse of regularization strength (C)')\n",
    "    axs.set_ylabel('Accuracy')\n",
    "    axs.set_xscale('log')\n",
    "    axs.legend()\n",
    "    \n",
    "plot_accus_clf()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## You try it\n",
    "Try to plot a figure showing how polynomial degree influences the performance of a model, i.e. how training accuracy and validation accuracy evolves."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Underfitting and overfitting for Tree models"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 67,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-01-26T15:43:08.403587Z",
     "start_time": "2022-01-26T15:43:08.275339Z"
    }
   },
   "outputs": [],
   "source": [
    "from sklearn.tree import DecisionTreeClassifier"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 68,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-01-26T15:43:10.764218Z",
     "start_time": "2022-01-26T15:43:10.738099Z"
    }
   },
   "outputs": [],
   "source": [
    "def plot_tree_bondary():\n",
    "    \"\"\" auxiliary function to plot decision boundary for tree models\"\"\"\n",
    "    def Boundary(axes):\n",
    "        u = np.linspace(-1, 1.2, 50)\n",
    "        v = np.linspace(-1, 1.2, 50)\n",
    "        U,V = np.meshgrid(u,v)\n",
    "        U = np.ravel(U)\n",
    "        V = np.ravel(V)\n",
    "\n",
    "        Z = clf_tree.predict(np.array([U,V]).T)\n",
    "\n",
    "        U = U.reshape((len(u), len(v)))\n",
    "        V = V.reshape((len(u), len(v)))\n",
    "        Z = Z.reshape((len(u), len(v)))\n",
    "        cs = axes.contourf(U, V, Z, cmap='twilight')\n",
    "        return cs\n",
    "\n",
    "    fig, axes = plt.subplots(1,2)\n",
    "    fig.set_size_inches(15, 5)\n",
    "\n",
    "    Boundary(axes[0])\n",
    "    axes[0].set_xlabel('Feature 1')\n",
    "    axes[0].set_ylabel('Feature 2')\n",
    "    axes[0].scatter(X_train[tr_p_idx,0], X_train[tr_p_idx, 1], color = 'r', marker='x', label='Faulty')\n",
    "    axes[0].scatter(X_train[tr_n_idx,0], X_train[tr_n_idx, 1], color = 'g', marker='o', label='Good')\n",
    "    axes[0].legend(title='Legend', loc = 'best' )\n",
    "    axes[0].set_title('accuracy on training set: {}'.format(clf_tree.score(X_train,y_train)),fontsize=14)\n",
    "\n",
    "    Boundary(axes[1])\n",
    "    axes[1].set_xlabel('Feature 1')\n",
    "    axes[1].set_ylabel('Feature 2')\n",
    "    axes[1].scatter(X_val[te_p_idx,0], X_val[te_p_idx, 1], color = 'yellow', marker='x', label='Faulty')\n",
    "    axes[1].scatter(X_val[te_n_idx,0], X_val[te_n_idx, 1], color = 'b', marker='o', label='Good')\n",
    "    axes[1].legend(title='Legend', loc = 'best' )\n",
    "    axes[1].set_title('accuracy on validation set: {}'.format(clf_tree.score(X_val,y_val)),fontsize=14)\n",
    "    plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 77,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-01-26T16:23:01.097391Z",
     "start_time": "2022-01-26T16:23:00.597721Z"
    }
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1080x360 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "MAX_DEPTH = 10\n",
    "\n",
    "clf_tree = DecisionTreeClassifier(max_depth=MAX_DEPTH,random_state=10)\n",
    "clf_tree.fit(X_train,y_train) # use the same dataset as logistic regression\n",
    "\n",
    "plot_tree_bondary()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 76,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-01-26T15:46:57.980875Z",
     "start_time": "2022-01-26T15:46:57.052638Z"
    }
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x504 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "def plot_accu_tree():\n",
    "    fig, axs = plt.subplots(figsize=(10,7))\n",
    "    \n",
    "    train_errs = []\n",
    "    val_errs = []\n",
    "    \n",
    "    depths = range(1,12)\n",
    "    \n",
    "    for d in depths :\n",
    "        estimator = DecisionTreeClassifier(max_depth=d,random_state=10)\n",
    "        \n",
    "        cv_results = cross_validate(estimator, X, y, cv=3,scoring=\"accuracy\",return_train_score=True)\n",
    "        \n",
    "        averaged_train_error = (cv_results['train_score']).mean()\n",
    "        averaged_val_error = (cv_results['test_score']).mean()\n",
    "        \n",
    "        train_errs.append(averaged_train_error)\n",
    "        val_errs.append(averaged_val_error)\n",
    "        \n",
    "    axs.plot(depths,train_errs,color='red',label='training accuracy')\n",
    "    axs.plot(depths,val_errs,color='blue',label='validation accuracy')\n",
    "    axs.set_xlabel('tree depth')\n",
    "    axs.set_ylabel('Accuracy')\n",
    "    axs.legend()\n",
    "    \n",
    "plot_accu_tree()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.6"
  },
  "latex_envs": {
   "LaTeX_envs_menu_present": true,
   "autoclose": false,
   "autocomplete": true,
   "bibliofile": "biblio.bib",
   "cite_by": "apalike",
   "current_citInitial": 1,
   "eqLabelWithNumbers": true,
   "eqNumInitial": 1,
   "hotkeys": {
    "equation": "Ctrl-E",
    "itemize": "Ctrl-I"
   },
   "labels_anchors": false,
   "latex_user_defs": false,
   "report_style_numbering": false,
   "user_envs_cfg": false
  },
  "toc": {
   "base_numbering": 1,
   "nav_menu": {},
   "number_sections": true,
   "sideBar": true,
   "skip_h1_title": false,
   "title_cell": "Table of Contents",
   "title_sidebar": "Contents",
   "toc_cell": false,
   "toc_position": {},
   "toc_section_display": true,
   "toc_window_display": false
  },
  "varInspector": {
   "cols": {
    "lenName": 16,
    "lenType": 16,
    "lenVar": 40
   },
   "kernels_config": {
    "python": {
     "delete_cmd_postfix": "",
     "delete_cmd_prefix": "del ",
     "library": "var_list.py",
     "varRefreshCmd": "print(var_dic_list())"
    },
    "r": {
     "delete_cmd_postfix": ") ",
     "delete_cmd_prefix": "rm(",
     "library": "var_list.r",
     "varRefreshCmd": "cat(var_dic_list()) "
    }
   },
   "types_to_exclude": [
    "module",
    "function",
    "builtin_function_or_method",
    "instance",
    "_Feature"
   ],
   "window_display": false
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
